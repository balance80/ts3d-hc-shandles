var shandles;(()=>{"use strict";var t={d:(e,o)=>{for(var i in o)t.o(o,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:o[i]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{RotateHandleGroup:()=>v,SHandleManager:()=>p,ScaleHandleGroup:()=>b,TranslateHandleGroup:()=>I});class o{constructor(){this.nodeids=[],this.matrices=[]}gather(t,e=null){for(let o=0;o<e.length;o++)this.nodeids.push(e[o]),this.matrices.push(t.model.getNodeMatrix(e[o]))}clone(t){let e=new o;return e.gather(t,this.nodeids),e}async do(t){for(let e=0;e<this.nodeids.length;e++)await t.model.setNodeMatrix(this.nodeids[e],this.matrices[e])}}class i{constructor(t){this._viewer=t,this.undoStack=[],this.undoTop=0,this.undoPointer=0,this._undoTypes=[]}setUndoPoint(t){this.undoStack[this.undoPointer]=t,this.undoPointer++,this.undoTop=this.undoPointer}async undo(){if(this.undoPointer>0){if(this.undoPointer==this.undoTop){let t=this.undoStack[this.undoPointer-1][0].clone(this._viewer);this.setUndoPoint([t]),this.undoPointer--,this.undoTop=this.undoPointer}this.undoPointer--;for(let t=0;t<this.undoStack[this.undoPointer].length;t++)await this.undoStack[this.undoPointer][t].do(this._viewer)}}async redo(){if(this.undoPointer<this.undoTop){this.undoPointer++;for(let t=0;t<this.undoStack[this.undoPointer].length;t++)await this.undoStack[this.undoPointer][t].do(this._viewer)}}}class a extends Communicator.Operator.OperatorBase{constructor(t,e){super(t),this._viewer=t,this._manager=e,this._startmatrix=null,this._selectedHandleGroup=null,this._isClick=!1,this.oldNodeId=null,this.isHandled=!1}setHandled(t){return this.isHandled}async onMouseDown(t){this.isHandled=!1,await super.onMouseDown(t),this._selectedHandleGroup=null,this._isClick=!0;let e=new Communicator.PickConfig(Communicator.SelectionMask.Line);e.restrictToOverlays=!0;const o=await this._viewer.view.pickFromPoint(t.getPosition(),e);if(o.getPosition()){let e=this._viewer.model.getNodeParent(o.getNodeId()),i=this._viewer.model.getNodeParent(e),a=this._manager.getHandleGroup(i);a&&(this._selectedHandleGroup=a,this._selectedHandle=a.getHandle(e),await this._selectedHandle.handleMouseDown(t,o),this.oldColor=[this._selectedHandle._color.copy()],this._viewer.model.setNodesFaceColor([e],new Communicator.Color(255,255,0)),this.oldNodeId=e,this.isHandled=!0,t.setHandled(!0))}}async onMouseMove(t){if(await super.onMouseMove(t),this._isClick=!1,this._selectedHandleGroup)await this._selectedHandle.handleMouseMove(t),await this._manager.refreshAll(this._selectedHandleGroup),this.isHandled=!0,t.setHandled(!0);else{this.oldNodeId&&(this._viewer.model.setNodesFaceColor([this.oldNodeId],this.oldColor[0]),this.oldNodeId=null);let e=new Communicator.PickConfig(Communicator.SelectionMask.Face);e.restrictToOverlays=!0;const o=await this._viewer.view.pickFromPoint(t.getPosition(),e);if(o.getPosition()){let t=this._viewer.model.getNodeParent(o.getNodeId()),e=this._viewer.model.getNodeParent(t);this._manager.getHandleGroup(e)&&(this.oldColor=await this._viewer.model.getNodesFaceColor([t]),this.oldNodeId=t,this._viewer.model.setNodesFaceColor([t],new Communicator.Color(255,255,0)))}}}async onMouseUp(t){await super.onMouseUp(t),this._selectedHandleGroup&&(this._viewer.model.setNodesFaceColor([this._selectedHandle._nodeid],this.oldColor[0]),this._selectedHandleGroup=null),this.oldNodeId&&(this._viewer.model.setNodesFaceColor([this.oldNodeId],this.oldColor[0]),this.oldNodeId=null),this._isClick&&await this._manager.remove()}}function r(t,e,o){let i=[],a=[],r=new Communicator.MeshData,n=null;for(let r=0;r<t.length;r++){let s,h=[];if(s=r<t.length-1?Communicator.Point3.subtract(t[r+1],t[r]).normalize():Communicator.Point3.subtract(t[r],t[r-1]).normalize(),Communicator.Util.generatePointsOnCircle(h,t[r],e,o,s),r>0){let t=h[0],e=1e11,r=0;for(let o=0;o<n.length;o++)Communicator.Point3.distance(t,n[o])<e&&(e=Communicator.Point3.distance(t,n[o]),r=o);let s,l=r;s=l==n.length-1?0:l+1;let m=0;for(let t=0;t<o;t++){let e=m+r,s=m+r+1;e>n.length-1&&(e=e-n.length+1),s>n.length-1&&(s=s-n.length+1),m++,e<0&&(e=n.length-1+e),s<0&&(s=n.length-1+s);let l=t+1;l>o-1&&(l=0),i.push(n[e].x,n[e].y,n[e].z),i.push(h[t].x,h[t].y,h[t].z),i.push(h[l].x,h[l].y,h[l].z),i.push(h[l].x,h[l].y,h[l].z),i.push(n[s].x,n[s].y,n[s].z),i.push(n[e].x,n[e].y,n[e].z);let u=Communicator.Plane.createFromPoints(n[e],h[t],h[l]);for(let t=0;t<6;t++)a.push(u.normal.x,u.normal.y,u.normal.z)}}n=h}return r.addFaces(i,a),r}function n(t,e,o){let i=h(t),a=Communicator.Matrix.multiply(e,Communicator.Matrix.inverse(i)),r=Communicator.Matrix.multiply(a,o);return Communicator.Matrix.multiply(r,i)}function s(t,e){let o=t.transform(new Communicator.Point3(0,0,0)),i=t.transform(e),a=Communicator.Point3.subtract(i,o);return a.normalize(),a}function h(t){let e=new Communicator.Matrix;return e.setTranslationComponent(t.x,t.y,t.z),e}function l(t,e,o){let i=s(t,o);o.set(i.x,i.y,i.z);let a=t.transform(e);e.set(a.x,a.y,a.z)}function m(t,e){let o=t.view.getCamera(),i=o.getPosition(),a=o.getTarget(),r=Communicator.Point3.subtract(a,i).normalize();return Communicator.Plane.createFromPointAndNormal(e,r)}function u(t,e,o,i){return c(Communicator.Point3.subtract(t,i),Communicator.Point3.subtract(e,i),o)}async function d(t){const e=(1+Math.sqrt(5))/2,o=Math.sqrt(10+2*Math.sqrt(5))/(4*e),i=o/2,a=o/(2*e),r=[];r[0]=new Communicator.Point3(-a,i,0),r[1]=new Communicator.Point3(a,i,0),r[2]=new Communicator.Point3(-a,-i,0),r[3]=new Communicator.Point3(a,-i,0),r[4]=new Communicator.Point3(0,-a,i),r[5]=new Communicator.Point3(0,a,i),r[6]=new Communicator.Point3(0,-a,-i),r[7]=new Communicator.Point3(0,a,-i),r[8]=new Communicator.Point3(i,0,-a),r[9]=new Communicator.Point3(i,0,a),r[10]=new Communicator.Point3(-i,0,-a),r[11]=new Communicator.Point3(-i,0,a);for(let t=0;t<r.length;t++)r[t].normalize();let n=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],s=12;for(let t=0;t<3;t++){let t=[];n.map((e=>{const o=r[e[0]],i=r[e[1]],a=r[e[2]];r[s++]=new Communicator.Point3(o.x+i.x,o.y+i.y,o.z+i.z).scale(.5).normalize(),r[s++]=new Communicator.Point3(i.x+a.x,i.y+a.y,i.z+a.z).scale(.5).normalize(),r[s++]=new Communicator.Point3(a.x+o.x,a.y+o.y,a.z+o.z).scale(.5).normalize(),t.push([e[0],s-3,s-1]),t.push([s-3,s-2,s-1]),t.push([s-3,e[1],s-2]),t.push([s-2,e[2],s-1])})),n=t}const h=[],l=[];for(const t of n)for(let e=0;e<3;e++){const o=t[e];h.push(r[o].x),h.push(r[o].y),h.push(r[o].z);const i=r[o].normalize();l.push(i.x),l.push(i.y),l.push(i.z)}const m=new Communicator.MeshData;return m.addFaces(h,l),m.setFaceWinding(Communicator.FaceWinding.CounterClockwise),await t.model.createMesh(m)}function c(t,e,o){return Math.atan2(Communicator.Point3.dot(Communicator.Point3.cross(t,e),o),Communicator.Point3.dot(t,e))*(180/Math.PI)}function g(t,e){let o=Communicator.Point3.dot(t.normal,e)+t.d;return Communicator.Point3.subtract(e,new Communicator.Point3(o*t.normal.x,o*t.normal.y,o*t.normal.z))}function _(t,e,o){e.normalize();var i=Communicator.Point3.subtract(o,t),a=Communicator.Point3.dot(i,e),r=Communicator.Point3.add(t,Communicator.Point3.scale(e,a));return Communicator.Point3.subtract(r,o),r}function w(t,e,o,i){const a=e.copy(),r=e.copy().add(o),n=t.view.unprojectPoint(i,0),s=t.view.unprojectPoint(i,.5);return null!==n&&null!==s?Communicator.Util.lineLineIntersect(a,r,n,s):null}class p{constructor(t){this._viewer=t,this._translateSnapping=0,this._rotateSnapping=0,this._resetSnapping=!1,this._handleScale=1,this._handles=[],this._undoManager=new i(t),this._handlenode=this._viewer.model.createNode(this._viewer.model.getRootNode(),"advancedHandles"),this._eventReceivers=[];const e=this;this._viewer.overlayManager.setCamera(p.overlayIndex,this._viewer.view.getCamera()),this._viewer.setCallbacks({camera:async function(t,o,i,a){e._viewer.overlayManager.setCamera(p.overlayIndex,e._viewer.view.getCamera());for(let t=0;t<e._handles.length;t++)await e._handles[t].cameraUpdate(e._viewer.view.getCamera())}}),this._viewer.overlayManager.setViewport(p.overlayIndex,Communicator.OverlayAnchor.UpperLeftCorner,0,Communicator.OverlayUnit.ProportionOfCanvas,0,Communicator.OverlayUnit.ProportionOfCanvas,1,Communicator.OverlayUnit.ProportionOfCanvas,1,Communicator.OverlayUnit.ProportionOfCanvas),this._viewer.overlayManager.setCamera(p.overlayIndex,this._viewer.view.getCamera());let o=new a(this._viewer,this),r=this._viewer.operatorManager.registerCustomOperator(o);this._viewer.operatorManager.push(r)}registerEventReceiver(t){this._eventReceivers.push(t)}transmitEvent(t){for(let e=0;e<this._eventReceivers.length;e++)this._eventReceivers[e](t)}async add(t,e,o=null,i=null){this._handles.push(t),await t.show(e,o,i)}async remove(){await this._viewer.model.deleteNode(this._handlenode),this._handlenode=this._viewer.model.createNode(this._viewer.model.getRootNode(),"advancedHandles"),this._handles=[]}async destroy(){await this._viewer.model.deleteNode(this._handlenode),this._handles=[]}getHandleGroup(t){for(let e=0;e<this._handles.length;e++)if(this._handles[e]._topNode==t||this._handles[e]._topNode2==t)return this._handles[e]}async refreshAll(t=null){this._viewer.overlayManager.setCamera(p.overlayIndex,this._viewer.view.getCamera());for(let e=0;e<this._handles.length;e++)this._handles[e]!=t&&(this._handles[e]._targetCenter=this._viewer.model.getNodeNetMatrix(this._handles[e]._targetNodes[0]).transform(this._handles[e]._targetCenterLocal),await this._handles[e].updateHandle())}async setRelative(t){for(let e=0;e<this._handles.length;e++)await this._handles[e].setRelative(t)}async _getArcCenter(t){let e=t.getNodeId(),o=t.getLineEntity();if(null!==e&&null!==o){let t=this._viewer.model,i=await t.getEdgeProperty(e,o.getLineId());if(i instanceof Communicator.SubentityProperties.CircleElement){const o=i.origin;return t.getNodeNetMatrix(e).transform(o,o),{center:o,normal:i.normal}}return null}}async positionFromSelection(t){let e=t.getNodeId(),o=t.getFaceEntity(),i=t.getLineEntity(),a=null,r=null;if(null!==i||null!==o){if(null!=i){let o=await this._getArcCenter(t);if(o){if(o.normal){let t=this._viewer.model.getNodeNetMatrix(e),i=t.transform(new Communicator.Point3(0,0,0)),a=t.transform(o.normal),n=Communicator.Point3.cross(new Communicator.Point3(1,0,0),o.normal);n.length()<1e-5&&(n=Communicator.Point3.cross(new Communicator.Point3(0,1,0),o.normal)),r=Communicator.Point3.subtract(a,i)}a=o.center}else{let t=i.getPoints();r=Communicator.Point3.subtract(t[1],t[0]);let e=r.length();a=t[0].copy().add(r.normalize().scale(e/2))}}else r=o.getNormal(),a=o.getBounding().center().copy();let n=function(t,e){const o=1e-7;t.normalize(),e.normalize();let i=Communicator.Point3.cross(t,e),a=Communicator.Point3.dot(t,e),r=i.length();if(r>-1e-7&&r<o){if(!(a<0))return new Communicator.Matrix;if(t.x<-1e-7||t.x>o)i.x=t.y,i.y=-t.x,i.z=0;else if(t.y<-1e-7||t.y>o)i.x=-t.y,i.y=t.x,i.z=0;else{if(!(t.z<-1e-7||t.z>o))return new Communicator.Matrix;i.x=-t.z,i.z=t.x,i.y=0}}var n=Math.atan2(r,a);return n*=180/Math.PI,Communicator.Matrix.createFromOffAxisRotation(i,n)}(new Communicator.Point3(1,0,0),r),s=this._viewer.model.getNodeNetMatrix(e),h=new Communicator.Point3(s.m[0],s.m[1],s.m[2]).normalize(),l=new Communicator.Point3(s.m[4],s.m[5],s.m[6]).normalize(),m=new Communicator.Point3(s.m[8],s.m[9],s.m[10]).normalize(),u=new Communicator.Matrix;u.m[0]=h.x,u.m[1]=h.y,u.m[2]=h.z,u.m[4]=l.x,u.m[5]=l.y,u.m[6]=l.z,u.m[8]=m.x,u.m[9]=m.y,u.m[10]=m.z;let d=Communicator.Matrix.inverse(u);return n=Communicator.Matrix.multiply(n,d),{position:a,rotation:n}}}setUndoPoint(t){let e=new o;e.gather(this._viewer,t),this._undoManager.setUndoPoint([e])}async undo(){await this._undoManager.undo(),await this.refreshAll()}async redo(){await this._undoManager.redo(),await this.refreshAll()}setTranslateSnapping(t){this._translateSnapping=t}setRotateSnapping(t){this._rotateSnapping=t}setResetSnapping(t){this._resetSnapping=t}async setHandleScale(t){this._handleScale=t,await this.refreshAll()}getHandleNode(){return this._handlenode}}p.overlayIndex=7;class M{constructor(t){this._manager=t,this._viewer=t._viewer,this._axisHandles=[],this._handles=[],this._targetNodes=null,this._relative=!0}getManager(){return this._manager}getViewer(){return this._viewer}remove(){this._viewer.model.deleteNode(this._handlenode)}async setRelative(t){this._relative=t,this._topNode&&await this.updateHandle()}getRelative(){return this._relative}setAxisHandles(t){this._axisHandles=t}getAxisHandles(){return this._axisHandles}async cameraUpdate(t){for(let e=0;e<this._handles.length;e++)await this._handles[e].cameraUpdate(t)}getHandle(t){for(let e=0;e<this._handles.length;e++)if(this._handles[e]._nodeid==t)return this._handles[e]}async updateHandle(){let t=new Communicator.Matrix;t.setScaleComponent(this._manager._handleScale,this._manager._handleScale,this._manager._handleScale);let e=this._calculateStartMatrix(),o=this._targetCenter,i=new Communicator.Matrix;i.setTranslationComponent(o.x,o.y,o.z),i=Communicator.Matrix.multiply(t,i);let a=Communicator.Matrix.multiply(e,i);await this._viewer.model.setNodeMatrix(this._topNode,a),await this._viewer.model.setNodeMatrix(this._topNode2,i);for(let t=0;t<this._handles.length;t++)await this._handles[t].update(this._viewer.view.getCamera())}async show(t,e=null,o=null){this._targetNodes=t;let i=new Communicator.Matrix;if(i.setScaleComponent(this._manager._handleScale,this._manager._handleScale,this._manager._handleScale),e)this._targetCenter=e.copy();else{let e=await this._viewer.model.getNodesBounding(t);this._targetCenter=e.center()}this._targetCenterLocal=Communicator.Matrix.inverse(this._viewer.model.getNodeNetMatrix(this._targetNodes[0])).transform(this._targetCenter),this._extraRotation=o,this._topNode=this._viewer.model.createNode(this._manager._handlenode,"topNode"),this._topNode2=this._viewer.model.createNode(this._manager._handlenode,"topNode2");let a=this._calculateStartMatrix(),r=new Communicator.Matrix;r.setTranslationComponent(this._targetCenter.x,this._targetCenter.y,this._targetCenter.z),r=Communicator.Matrix.multiply(i,r);let n=Communicator.Matrix.multiply(a,r);await this._viewer.model.setNodeMatrix(this._topNode,n),await this._viewer.model.setNodeMatrix(this._topNode2,r)}_calculateStartMatrix(){let t=new Communicator.Matrix;if(this._relative){let e=this._viewer.model.getNodeNetMatrix(this._targetNodes[0]).copy(),o=new Communicator.Point3(e.m[0],e.m[1],e.m[2]).normalize(),i=new Communicator.Point3(e.m[4],e.m[5],e.m[6]).normalize(),a=new Communicator.Point3(e.m[8],e.m[9],e.m[10]).normalize();t.m[0]=o.x,t.m[1]=o.y,t.m[2]=o.z,t.m[4]=i.x,t.m[5]=i.y,t.m[6]=i.z,t.m[8]=a.x,t.m[9]=a.y,t.m[10]=a.z}return this._extraRotation&&(t=Communicator.Matrix.multiply(this._extraRotation,t)),t}}class C{constructor(t){this._group=t,this._axis=[],this._nodeid=null}getType(){return this._type}show(){let t=this._group.getViewer();this._nodeid&&(t.overlayManager.addNodes(p.overlayIndex,[this._nodeid]),t.model.setInstanceModifier(Communicator.InstanceModifier.SuppressCameraScale,[this._nodeid],!0),t.model.setInstanceModifier(Communicator.InstanceModifier.DoNotLight,[this._nodeid],!0),t.model.setInstanceModifier(Communicator.InstanceModifier.ExcludeBounding,[this._nodeid],!0),t.model.setInstanceModifier(Communicator.InstanceModifier.IgnoreCutting,[this._nodeid],!0))}update(){}cameraUpdate(t){}handleMouseDown(t,e){let o=this._group.getViewer();this._startmatrix=o.model.getNodeNetMatrix(this._nodeid),this._startTargetMatrices=[];for(let t=0;t<this._group._targetNodes.length;t++)this._startTargetMatrices.push(o.model.getNodeMatrix(this._group._targetNodes[t]));this._group.getManager().setUndoPoint(this._group._targetNodes),this._startPosition=e.getPosition(),this._startPosition2D=t.getPosition()}async handleMouseMove(t){await this._group.getManager().transmitEvent(this._group._targetNodes)}}class x extends C{constructor(t,e,o,i){super(t),this._type=0,this._axis=e,this._rotation=o,this._color=i,this._startRotationMatrixCache=[]}async generateBaseGeometry(){let t=[];Communicator.Util.generatePointsOnCircle(t,new Communicator.Point3(0,0,0),.15,64,new Communicator.Point3(0,0,1));let e=r(t.splice(0,t.length/2),.0055,10);this._group.getManager()._arcmesh=await this._group.getViewer().model.createMesh(e)}async show(){let t=this._group.getViewer(),e=new Communicator.Matrix;this._axis&&Communicator.Util.computeOffaxisRotation(this._axis,this._rotation,e),this._nodeid=t.model.createNode(this._group._topNode,"rotateHandle"),this._group.getManager()._arcmesh||await this.generateBaseGeometry();let o=new Communicator.MeshInstanceData(this._group.getManager()._arcmesh);await t.model.createMeshInstance(o,this._nodeid),this._axis&&await t.model.setNodeMatrix(this._nodeid,e),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show(),await this.orientToCamera(t.view.getCamera())}async cameraUpdate(t){await this.orientToCamera(t)}async update(t){await this.orientToCamera(t)}async orientToCamera(t){let e=this._group.getViewer(),o=t.getPosition(),i=t.getTarget(),a=Communicator.Point3.subtract(i,o).normalize();o.x=i.x-1e5*a.x,o.y=i.y-1e5*a.y,o.z=i.z-1e5*a.z;let r=e.model.getNodeMatrix(this._nodeid),n=e.model.getNodeNetMatrix(this._nodeid),h=s(n,new Communicator.Point3(0,0,1)),l=Communicator.Point3.subtract(e.view.getCamera().getTarget(),o).normalize();if(h.equalsWithTolerance(l,.01))return;let m=Communicator.Matrix.inverse(n).transform(o),u=g(Communicator.Plane.createFromPointAndNormal(new Communicator.Point3(0,0,0),new Communicator.Point3(0,0,1)),m);u.normalize();let d=c(new Communicator.Point3(-1,0,0),u,new Communicator.Point3(0,0,1));if(isNaN(d))return;let _=new Communicator.Matrix;Communicator.Util.computeOffaxisRotation(new Communicator.Point3(0,0,1),d,_);let w=Communicator.Matrix.multiply(_,r);await e.model.setNodeMatrix(this._nodeid,w)}async handleMouseMove(t){let e=this._group.getViewer();if(0===this._startRotationMatrixCache.length)for(let t=0;t<this._startTargetMatrices.length;t++){const e=this._startTargetMatrices[t].copy();this._startRotationMatrixCache.push(e)}if(this._group.getManager()._resetSnapping){for(let t=0;t<this._startTargetMatrices.length;t++){const o=this._startRotationMatrixCache[t].copy();await e.model.setNodeMatrix(this._group._targetNodes[t],o)}return}let o=new Communicator.Point3(0,0,0),i=new Communicator.Point3(0,0,1);l(this._startmatrix,o,i);let a=m(e,this._startPosition),r=e.view.raycastFromPoint(t.getPosition()),h=new Communicator.Point3;a.intersectsRay(r,h);let d=Communicator.Plane.createFromPointAndNormal(o,i),c=Math.abs(Communicator.Util.computeAngleBetweenVector(i,a.normal)),_=new Communicator.Point3;if(c>85&&c<95)_=g(d,h);else{let a=e.view.raycastFromPoint(t.getPosition());Communicator.Plane.createFromPointAndNormal(o,i).intersectsRay(a,_)}let w=u(this._startPosition,_,i,o);this._group.getManager()._rotateSnapping&&(w=Math.round(w/this._group.getManager()._rotateSnapping)*this._group.getManager()._rotateSnapping);for(let t=0;t<this._startTargetMatrices.length;t++){let o=s(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))),i),a=new Communicator.Matrix;Communicator.Util.computeOffaxisRotation(o,w,a);let r=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(this._group._targetCenter);await e.model.setNodeMatrix(this._group._targetNodes[t],n(r,this._startTargetMatrices[t],a))}await this._group.updateHandle(),await super.handleMouseMove(t)}}var N;!function(t){function e(t,e){var o=Math.abs(t),i=Math.abs(e);return 0===t?Math.log(i):0===e?Math.log(o):3e3>o&&3e3>i?.5*Math.log(t*t+e*e):Math.log(t/Math.cos(Math.atan2(e,t)))}function o(t,e,o,i,a){if(void 0!==a)t.w=e,t.x=o,t.y=i,t.z=a;else{if("object"==typeof e&&void 0===i){if("w"in e||"x"in e||"y"in e||"z"in e)return t.w=e.w||0,t.x=e.x||0,t.y=e.y||0,void(t.z=e.z||0);if("re"in e&&"im"in e)return t.w=e.re,t.x=e.im,t.y=0,void(t.z=0);if(4===e.length)return t.w=e[0],t.x=e[1],t.y=e[2],void(t.z=e[3]);if(3===e.length)return t.w=0,t.x=e[0],t.y=e[1],void(t.z=e[2]);throw Error("Invalid object")}if("string"==typeof e&&void 0===i){var n=1;if(o=0,i={i:"x",j:"y",k:"z"},null===(e=e.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g)))throw Error("Parse error");for(a=t.w=t.x=t.y=t.z=0;a<e.length;a++){var s=e[a],h=e[a+1];if(" "!==s&&"\t"!==s&&"\n"!==s)if("+"===s)n++;else if("-"===s)o++;else{if(0===n+o)throw Error("Parse error"+s);if(void 0!==(n=i[s]))" "===h||isNaN(h)?s="1":(s=h,a++);else{if(isNaN(s))throw Error("Parser error");void 0!==(n=i[h])&&a++}t[n||"w"]+=parseFloat((o%2?"-":"")+s),n=o=0}}if(0<n+o)throw Error("Parser error")}else void 0===e&&t!==r?(t.w=1,t.x=t.y=t.z=0):(t.w=e||0,o&&3===o.length?(t.x=o[0],t.y=o[1],t.z=o[2]):(t.x=o||0,t.y=i||0,t.z=a||0))}}function i(t,e,o){var i="";return 0!==t&&(""!==o?i+=0>t?" - ":" + ":0>t&&(i+="-"),1===(t=Math.abs(t))&&""!==e||(i+=t),i+=e),i}function a(t,e,i,r){if(!(this instanceof a))return new a(t,e,i,r);o(this,t,e,i,r)}var r={w:1,x:0,y:0,z:0};a.prototype={w:1,x:0,y:0,z:0,add:function(t,e,i,n){return o(r,t,e,i,n),new a(this.w+r.w,this.x+r.x,this.y+r.y,this.z+r.z)},sub:function(t,e,i,n){return o(r,t,e,i,n),new a(this.w-r.w,this.x-r.x,this.y-r.y,this.z-r.z)},neg:function(){return new a(-this.w,-this.x,-this.y,-this.z)},norm:function(){var t=this.w,e=this.x,o=this.y,i=this.z;return Math.sqrt(t*t+e*e+o*o+i*i)},normSq:function(){var t=this.w,e=this.x,o=this.y,i=this.z;return t*t+e*e+o*o+i*i},normalize:function(){var t=this.w,e=this.x,o=this.y,i=this.z,r=Math.sqrt(t*t+e*e+o*o+i*i);return r<a.EPSILON?a.ZERO:new a(t*(r=1/r),e*r,o*r,i*r)},mul:function(t,e,i,n){o(r,t,e,i,n),t=this.w,e=this.x,i=this.y,n=this.z;var s=r.w,h=r.x,l=r.y,m=r.z;return new a(t*s-e*h-i*l-n*m,t*h+e*s+i*m-n*l,t*l+i*s+n*h-e*m,t*m+n*s+e*l-i*h)},scale:function(t){return new a(this.w*t,this.x*t,this.y*t,this.z*t)},dot:function(t,e,i,a){return o(r,t,e,i,a),this.w*r.w+this.x*r.x+this.y*r.y+this.z*r.z},inverse:function(){var t=this.w,e=this.x,o=this.y,i=this.z,r=t*t+e*e+o*o+i*i;return 0===r?a.ZERO:new a(t*(r=1/r),-e*r,-o*r,-i*r)},div:function(t,e,i,n){o(r,t,e,i,n),t=this.w,e=this.x,i=this.y,n=this.z;var s=r.w,h=r.x,l=r.y,m=r.z,u=s*s+h*h+l*l+m*m;return 0===u?a.ZERO:new a((t*s+e*h+i*l+n*m)*(u=1/u),(e*s-t*h-i*m+n*l)*u,(i*s-t*l-n*h+e*m)*u,(n*s-t*m-e*l+i*h)*u)},conjugate:function(){return new a(this.w,-this.x,-this.y,-this.z)},exp:function(){var t=this.x,e=this.y,o=this.z,i=Math.sqrt(t*t+e*e+o*o),r=Math.exp(this.w),n=r/i*Math.sin(i);return 0===i?new a(r,0,0,0):new a(r*Math.cos(i),t*n,e*n,o*n)},log:function(){var t=this.w,o=this.x,i=this.y,r=this.z;if(0===i&&0===r)return new a(e(t,o),Math.atan2(o,t),0,0);var n=Math.sqrt(o*o+i*i+r*r);return n=Math.atan2(n,t)/n,new a(.5*Math.log(o*o+i*i+r*r+t*t),o*n,i*n,r*n)},pow:function(t,i,n,s){if(o(r,t,i,n,s),0===r.y&&0===r.z){if(1===r.w&&0===r.x)return this;if(0===r.w&&0===r.x)return a.ONE;if(0===this.y&&0===this.z){if(t=this.w,i=this.x,0===t&&0===i)return a.ZERO;if(n=Math.atan2(i,t),s=e(t,i),0===r.x){if(0===i&&0<=t)return new a(Math.pow(t,r.w),0,0,0);if(0===t)switch(r.w%4){case 0:return new a(Math.pow(i,r.w),0,0,0);case 1:return new a(0,Math.pow(i,r.w),0,0);case 2:return new a(-Math.pow(i,r.w),0,0,0);case 3:return new a(0,-Math.pow(i,r.w),0,0)}}return t=Math.exp(r.w*s-r.x*n),i=r.x*s+r.w*n,new a(t*Math.cos(i),t*Math.sin(i),0,0)}}return this.log().a(r).exp()},equals:function(t,e,i,n){return o(r,t,e,i,n),t=a.EPSILON,Math.abs(r.w-this.w)<t&&Math.abs(r.x-this.x)<t&&Math.abs(r.y-this.y)<t&&Math.abs(r.z-this.z)<t},isFinite:function(){return isFinite(this.w)&&isFinite(this.x)&&isFinite(this.y)&&isFinite(this.z)},isNaN:function(){return isNaN(this.w)||isNaN(this.x)||isNaN(this.y)||isNaN(this.z)},toString:function(){var t=this.w,e=this.x,o=this.y,a=this.z;return isNaN(t)||isNaN(e)||isNaN(o)||isNaN(a)?"NaN":(t=i(t,"",""),t+=i(e,"i",t),t+=i(o,"j",t),""===(t+=i(a,"k",t))?"0":t)},real:function(){return this.w},imag:function(){return[this.x,this.y,this.z]},toVector:function(){return[this.w,this.x,this.y,this.z]},toMatrix:function(t){var e=this.w,o=this.x,i=this.y,a=this.z,r=e*e+o*o+i*i+a*a,n=0===r?0:2/r;r=n*e*o;var s=n*e*i;e=n*e*a;var h=n*o*o,l=n*o*i;o=n*o*a;var m=n*i*i;return i=n*i*a,a*=n*a,t?[[1-(m+a),l-e,o+s],[l+e,1-(h+a),i-r],[o-s,i+r,1-(h+m)]]:[1-(m+a),l-e,o+s,l+e,1-(h+a),i-r,o-s,i+r,1-(h+m)]},toMatrix4:function(t){var e=this.w,o=this.x,i=this.y,a=this.z,r=e*e+o*o+i*i+a*a,n=0===r?0:2/r;r=n*e*o;var s=n*e*i;e=n*e*a;var h=n*o*o,l=n*o*i;o=n*o*a;var m=n*i*i;return i=n*i*a,a*=n*a,t?[[1-(m+a),l-e,o+s,0],[l+e,1-(h+a),i-r,0],[o-s,i+r,1-(h+m),0],[0,0,0,1]]:[1-(m+a),l-e,o+s,0,l+e,1-(h+a),i-r,0,o-s,i+r,1-(h+m),0,0,0,0,1]},clone:function(){return new a(this)},rotateVector:function(t){var e=this.w,o=this.x,i=this.y,a=this.z,r=t[0],n=t[1],s=t[2],h=e*r+i*s-a*n,l=e*n+a*r-o*s;return[h*e-(t=-o*r-i*n-a*s)*o-l*a+(r=e*s+o*n-i*r)*i,l*e-t*i-r*o+h*a,r*e-t*a-h*i+l*o]},slerp:function(t,e,i,n){o(r,t,e,i,n);var s=this.w,h=this.x,l=this.y,m=this.z,u=r.w,d=r.x,c=r.y,g=r.z,_=s*u+h*d+l*c+m*g;if(0>_&&(s=-s,h=-h,l=-l,m=-m,_=-_),.9995<_)return function(t){return new a(s+t*(u-s),h+t*(d-h),l+t*(c-l),m+t*(g-m)).normalize()};var w=Math.acos(_),p=Math.sin(w);return function(t){var e=w*t;return t=Math.sin(e),new a((e=Math.cos(e)-_*t/p)*s+(t/=p)*u,e*h+t*d,e*l+t*c,e*m+t*g)}}},a.ZERO=new a(0,0,0,0),a.ONE=new a(1,0,0,0),a.I=new a(0,1,0,0),a.J=new a(0,0,1,0),a.K=new a(0,0,0,1),a.EPSILON=1e-16,a.fromAxisAngle=function(t,e){var o=.5*e,i=t[0],r=t[1],n=t[2],s=Math.sin(o)/Math.sqrt(i*i+r*r+n*n);return new a(Math.cos(o),i*s,r*s,n*s)},a.fromBetweenVectors=function(t,e){var o=t[0],i=t[1],r=t[2],n=e[0],s=e[1],h=e[2],l=o*n+i*s+r*h,m=i*h-r*s;return r=r*n-o*h,o=o*s-i*n,new a(l+Math.sqrt(l*l+m*m+r*r+o*o),m,r,o).normalize()},a.fromEuler=function(t,e,o,i){var r=.5*e,n=.5*o,s=.5*t;return t=Math.cos(r),o=Math.cos(n),e=Math.cos(s),r=Math.sin(r),n=Math.sin(n),s=Math.sin(s),void 0===i||"ZXY"===i?new a(t*o*e-r*n*s,r*o*e-t*n*s,t*n*e+r*o*s,t*o*s+r*n*e):"XYZ"===i?new a(t*o*e-r*n*s,r*o*e+t*n*s,t*n*e-r*o*s,t*o*s+r*n*e):"YXZ"===i?new a(t*o*e+r*n*s,r*o*e+t*n*s,t*n*e-r*o*s,t*o*s-r*n*e):"ZYX"===i?new a(t*o*e+r*n*s,r*o*e-t*n*s,t*n*e+r*o*s,t*o*s-r*n*e):"YZX"===i?new a(t*o*e-r*n*s,r*o*e+t*n*s,t*n*e+r*o*s,t*o*s-r*n*e):"XZY"===i?new a(t*o*e+r*n*s,r*o*e-t*n*s,t*n*e-r*o*s,t*o*s+r*n*e):null},N=a}();const y=N;class f extends C{constructor(t,e,o){super(t),this._type=2,this._color=e,this._opacity=o}async show(){let t=this._group.getViewer();this._nodeid=t.model.createNode(this._group._topNode,"rotateTrackballHandle"),this._group.getManager()._sphereMesh||(this._group.getManager()._sphereMesh=await d(t));let e=new Communicator.MeshInstanceData(this._group.getManager()._sphereMesh);await t.model.createMeshInstance(e,this._nodeid);let o=new Communicator.Matrix;o.setScaleComponent(.14,.14,.14),await t.model.setNodeMatrix(this._nodeid,o),t.model.setNodesFaceColor([this._nodeid],this._color),t.model.setNodesOpacity([this._nodeid],this._opacity),await super.show()}async handleMouseMove(t){let e=this._group.getViewer(),o=new Communicator.PickConfig(Communicator.SelectionMask.Line);o.restrictToOverlays=!0;const i=await e.view.pickFromPoint(t.getPosition(),o);if(i.getPosition()){let o=i.getPosition(),a=Communicator.Point3.subtract(this._startPosition,this._group._targetCenter);a.normalize();let r=Communicator.Point3.subtract(o,this._group._targetCenter);r.normalize();for(let t=0;t<this._startTargetMatrices.length;t++){let o=s(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))),a),i=s(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))),r),h=y.fromBetweenVectors([o.x,o.y,o.z],[i.x,i.y,i.z]),l=new Communicator.Quaternion(h.x,h.y,h.z,h.w),m=Communicator.Quaternion.toMatrix(l),u=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(this._group._targetCenter);await e.model.setNodeMatrix(this._group._targetNodes[t],n(u,this._startTargetMatrices[t],m))}await this._group.updateHandle(),await super.handleMouseMove(t)}}}class P extends C{constructor(t,e){super(t),this._type=1,this._color=e,this._startRotationMatrixCache=[]}async generateBaseGeometry(){let t=[];Communicator.Util.generatePointsOnCircle(t,new Communicator.Point3(0,0,0),.15,64,new Communicator.Point3(0,0,1));let e=r(t,.0045,10);this._group.getManager()._circleMesh=await this._group.getViewer().model.createMesh(e)}async show(){let t=this._group.getViewer();this._nodeid=t.model.createNode(this._group._topNode2,"rotateViewplaneHandle"),this._group.getManager()._circleMesh||await this.generateBaseGeometry();let e=new Communicator.MeshInstanceData(this._group.getManager()._circleMesh);await t.model.createMeshInstance(e,this._nodeid);let o=new Communicator.Matrix;o.setScaleComponent(1.2,1.2,1.2),await t.model.setNodeMatrix(this._nodeid,o),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show(),t.model.setInstanceModifier(Communicator.InstanceModifier.ScreenOriented,[this._nodeid],!0)}async handleMouseMove(t){let e=this._group.getViewer();if(0===this._startRotationMatrixCache.length)for(let t=0;t<this._startTargetMatrices.length;t++){const e=this._startTargetMatrices[t].copy();this._startRotationMatrixCache.push(e)}if(this._group.getManager()._resetSnapping){for(let t=0;t<this._startTargetMatrices.length;t++){const o=this._startRotationMatrixCache[t].copy();await e.model.setNodeMatrix(this._group._targetNodes[t],o)}return}let o=m(e,this._startPosition),i=e.view.raycastFromPoint(t.getPosition()),a=new Communicator.Point3;o.intersectsRay(i,a);let r=e.view.raycastFromPoint(this._startPosition2D),h=new Communicator.Point3;o.intersectsRay(r,h);let l=u(h,a,o.normal,this._group._targetCenter);this._group.getManager()._rotateSnapping&&(l=Math.round(l/this._group.getManager()._rotateSnapping)*this._group.getManager()._rotateSnapping);for(let t=0;t<this._startTargetMatrices.length;t++){let i=s(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))),o.normal),a=new Communicator.Matrix;Communicator.Util.computeOffaxisRotation(i,l,a);let r=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(this._group._targetCenter);await e.model.setNodeMatrix(this._group._targetNodes[t],n(r,this._startTargetMatrices[t],a))}await this._group.updateHandle(),await super.handleMouseMove(t)}}class v extends M{constructor(t){super(t)}async show(t,e=null,o=null){await super.show(t,e,o);const i=this._axisHandles;i&&!i.includes(Communicator.Axis.Z)||this._handles.push(new x(this,null,0,new Communicator.Color(255,0,0))),i&&!i.includes(Communicator.Axis.X)||this._handles.push(new x(this,new Communicator.Point3(0,1,0),90,new Communicator.Color(0,0,255))),i&&!i.includes(Communicator.Axis.Y)||this._handles.push(new x(this,new Communicator.Point3(1,0,0),90,new Communicator.Color(0,200,0))),i&&3!=i.length||this._handles.push(new f(this,new Communicator.Color(200,200,200),.3)),this._handles.push(new P(this,new Communicator.Color(222,222,222)));for(let t=0;t<this._handles.length;t++)await this._handles[t].show()}}class z extends C{constructor(t,e,o,i){super(t),this._type=3,this._axis=e,this._rotation=o,this._color=i}async generateBaseGeometry(){let t=[];t.push(new Communicator.Point3(0,0,0)),t.push(new Communicator.Point3(0,0,.15));let e=Communicator.Util.generateConeCylinderMeshData(.0045,10,.15,.0195,.03,0);this._group.getManager()._arrowMesh=await this._group.getViewer().model.createMesh(e);let o=Communicator.Util.generateConeCylinderMeshData(0,10,.15,.0195,.03,0);this._group.getManager()._arrowMesh2=await this._group.getViewer().model.createMesh(o)}async show(){let t=this._group.getViewer(),e=new Communicator.Matrix,o=new Communicator.Matrix;this._axis&&(Communicator.Util.computeOffaxisRotation(this._axis,this._rotation,e),Communicator.Util.computeOffaxisRotation(this._axis,180,o)),this._axis||Communicator.Util.computeOffaxisRotation(new Communicator.Point3(0,0,1),-180,o),this._nodeid=t.model.createNode(this._group._topNode,"translateHandle"),this._group.getManager()._arrowMesh||await this.generateBaseGeometry();let i=new Communicator.MeshInstanceData(this._group.getManager()._arrowMesh);await t.model.createMeshInstance(i,this._nodeid),this._axis&&await t.model.setNodeMatrix(this._nodeid,e);let a=new Communicator.MeshInstanceData(this._group.getManager()._arrowMesh2),r=await t.model.createMeshInstance(a,this._nodeid);await t.model.setNodeMatrix(r,o),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show()}async handleMouseMove(t){let e=this._group.getViewer(),o=new Communicator.Point3(0,0,0),i=new Communicator.Point3(0,1,0);l(this._startmatrix,o,i),Communicator.Plane.createFromPointAndNormal(o,i),e.view.raycastFromPoint(t.getPosition());let a=new Communicator.Point3(0,0,0),r=new Communicator.Point3(0,1,0);l(this._startmatrix,a,r);let n,s,h=_(a,r,this._startPosition),m=w(e,a,r,t.getPosition());if(m){for(let t=0;t<this._startTargetMatrices.length;t++)if(0==t){let o=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(h),i=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(m),a=Communicator.Point3.subtract(i,o),r=new Communicator.Matrix;if(this._group.getManager()._translateSnapping){let t=this._group.getManager()._translateSnapping;a.x=Math.round(a.x/t)*t,a.y=Math.round(a.y/t)*t,a.z=Math.round(a.z/t)*t}r.setTranslationComponent(a.x,a.y,a.z),n=Communicator.Matrix.multiply(this._startTargetMatrices[0],e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(new Communicator.Point3(0,0,0)),await e.model.setNodeMatrix(this._group._targetNodes[t],Communicator.Matrix.multiply(this._startTargetMatrices[t],r)),s=e.model.getNodeNetMatrix(this._group._targetNodes[t]).transform(new Communicator.Point3(0,0,0))}else{let o=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))),i=o.transform(n),a=o.transform(s),r=Communicator.Point3.subtract(a,i),h=new Communicator.Matrix;h.setTranslationComponent(r.x,r.y,r.z);let l=Communicator.Matrix.multiply(this._startTargetMatrices[t],h);await e.model.setNodeMatrix(this._group._targetNodes[t],l)}this._group._targetCenter=e.model.getNodeNetMatrix(this._group._targetNodes[0]).transform(this._group._targetCenterLocal),await this._group.updateHandle(),super.handleMouseMove(t)}}}class S extends C{constructor(t,e,o,i,a=null,r=null){super(t),this._type=4,this._axis=e,this._rotation=o,this._axis2=a,this._rotation2=r,this._color=i}async generateBaseGeometry(){let t=this._group.getViewer();this._group.getManager()._planeMesh=await async function(t,e,o,i){var a=new Communicator.MeshData;a.setFaceWinding(Communicator.FaceWinding.None);let r=[.025,-.025,0,i+e,-.025,0,.025,-.025+o,0,i+e,-.025,0,i+e,-.05-i,0,.025,-.025+o,0];return a.addFaces(r),await t.model.createMesh(a)}(t,.05,-.05,.025)}async show(){let t=this._group.getViewer(),e=new Communicator.Matrix,o=new Communicator.Matrix;this._axis&&Communicator.Util.computeOffaxisRotation(this._axis,this._rotation,e),this._axis2&&Communicator.Util.computeOffaxisRotation(this._axis2,this._rotation2,o);let i=Communicator.Matrix.multiply(e,o);this._nodeid=t.model.createNode(this._group._topNode,"translatePlaneHandle"),this._group.getManager()._planeMesh||await this.generateBaseGeometry();let a=new Communicator.MeshInstanceData(this._group.getManager()._planeMesh);await t.model.createMeshInstance(a,this._nodeid),this._axis&&await t.model.setNodeMatrix(this._nodeid,i),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show()}async handleMouseMove(t){let e=this._group.getViewer(),o=new Communicator.Point3(0,0,0),i=new Communicator.Point3(0,0,1);l(this._startmatrix,o,i);let a,r,n=Communicator.Plane.createFromPointAndNormal(o,i),s=e.view.raycastFromPoint(t.getPosition()),h=new Communicator.Point3;n.intersectsRay(s,h);for(let t=0;t<this._startTargetMatrices.length;t++)if(0==t){let o=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(this._startPosition),i=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(h),n=Communicator.Point3.subtract(i,o),s=new Communicator.Matrix;if(this._group.getManager()._translateSnapping){let t=this._group.getManager()._translateSnapping;n.x=Math.round(n.x/t)*t,n.y=Math.round(n.y/t)*t,n.z=Math.round(n.z/t)*t}s.setTranslationComponent(n.x,n.y,n.z),a=Communicator.Matrix.multiply(this._startTargetMatrices[0],e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))).transform(new Communicator.Point3(0,0,0)),await e.model.setNodeMatrix(this._group._targetNodes[t],Communicator.Matrix.multiply(this._startTargetMatrices[t],s)),r=e.model.getNodeNetMatrix(this._group._targetNodes[t]).transform(new Communicator.Point3(0,0,0))}else{let o=Communicator.Matrix.inverse(e.model.getNodeNetMatrix(e.model.getNodeParent(this._group._targetNodes[t]))),i=o.transform(a),n=o.transform(r),s=Communicator.Point3.subtract(n,i),h=new Communicator.Matrix;h.setTranslationComponent(s.x,s.y,s.z);let l=Communicator.Matrix.multiply(this._startTargetMatrices[t],h);await e.model.setNodeMatrix(this._group._targetNodes[t],l)}this._group._targetCenter=e.model.getNodeNetMatrix(this._group._targetNodes[0]).transform(this._group._targetCenterLocal),await this._group.updateHandle(),await super.handleMouseMove(t)}}class T extends C{constructor(t,e){super(t),this._type=5,this._color=e}async show(){let t=this._group.getViewer();this._nodeid=t.model.createNode(this._group._topNode,"translateViewplaneHandle"),this._group.getManager()._sphereMesh||(this._group.getManager()._sphereMesh=await d(t));let e=new Communicator.MeshInstanceData(this._group.getManager()._sphereMesh);await t.model.createMeshInstance(e,this._nodeid);let o=new Communicator.Matrix;o.setScaleComponent(.015,.015,.015),await t.model.setNodeMatrix(this._nodeid,o),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show()}async handleMouseMove(t){let e,o,i=this._group.getViewer(),a=m(i,this._startPosition),r=i.view.raycastFromPoint(t.getPosition()),n=new Communicator.Point3;a.intersectsRay(r,n);for(let t=0;t<this._startTargetMatrices.length;t++)if(0==t){let a=Communicator.Matrix.inverse(i.model.getNodeNetMatrix(i.model.getNodeParent(this._group._targetNodes[t]))).transform(this._startPosition),r=Communicator.Matrix.inverse(i.model.getNodeNetMatrix(i.model.getNodeParent(this._group._targetNodes[t]))).transform(n),s=Communicator.Point3.subtract(r,a),h=new Communicator.Matrix;if(this._group.getManager()._translateSnapping){let t=this._group.getManager()._translateSnapping;s.x=Math.round(s.x/t)*t,s.y=Math.round(s.y/t)*t,s.z=Math.round(s.z/t)*t}h.setTranslationComponent(s.x,s.y,s.z),e=Communicator.Matrix.multiply(this._startTargetMatrices[0],i.model.getNodeNetMatrix(i.model.getNodeParent(this._group._targetNodes[t]))).transform(new Communicator.Point3(0,0,0)),await i.model.setNodeMatrix(this._group._targetNodes[t],Communicator.Matrix.multiply(this._startTargetMatrices[t],h)),o=i.model.getNodeNetMatrix(this._group._targetNodes[t]).transform(new Communicator.Point3(0,0,0))}else{let a=Communicator.Matrix.inverse(i.model.getNodeNetMatrix(i.model.getNodeParent(this._group._targetNodes[t]))),r=a.transform(e),n=a.transform(o),s=Communicator.Point3.subtract(n,r),h=new Communicator.Matrix;h.setTranslationComponent(s.x,s.y,s.z);let l=Communicator.Matrix.multiply(this._startTargetMatrices[t],h);await i.model.setNodeMatrix(this._group._targetNodes[t],l)}this._group._targetCenter=i.model.getNodeNetMatrix(this._group._targetNodes[0]).transform(this._group._targetCenterLocal),await this._group.updateHandle(),await super.handleMouseMove(t)}}class I extends M{constructor(t){super(t)}async show(t,e=null,o=null){await super.show(t,e,o);const i=this._axisHandles;i&&!i.includes(Communicator.Axis.Y)||(this._handles.push(new z(this,null,0,new Communicator.Color(255,0,0))),this._handles.push(new S(this,new Communicator.Point3(1,0,0),-180,new Communicator.Color(255,0,0)))),i&&!i.includes(Communicator.Axis.Z)||(this._handles.push(new z(this,new Communicator.Point3(1,0,0),90,new Communicator.Color(0,0,255))),this._handles.push(new S(this,new Communicator.Point3(1,0,0),-180,new Communicator.Color(0,0,255),new Communicator.Point3(0,1,0),-90))),i&&!i.includes(Communicator.Axis.X)||(this._handles.push(new z(this,new Communicator.Point3(0,0,1),-90,new Communicator.Color(0,200,0))),this._handles.push(new S(this,new Communicator.Point3(1,0,0),-90,new Communicator.Color(0,200,0)))),(!i||i&&3==i.length)&&this._handles.push(new T(this,new Communicator.Color(255,255,255)));for(let t=0;t<this._handles.length;t++)await this._handles[t].show()}}class H extends C{constructor(t,e,o,i){super(t),this._type=6,this._axis=e,this._rotation=o,this._color=i}async generateBaseGeometry(){let t=this._group.getViewer();this._group.getManager()._cubeMesh=await async function(t,e,o){let i;i=.0125;var a=new Communicator.MeshData;a.setFaceWinding(Communicator.FaceWinding.None);var r=[-.0125,i,i,i,i,i,-.0125,-.0125,i,i,i,i,i,-.0125,i,-.0125,-.0125,i,i,i,-.0125,-.0125,i,-.0125,-.0125,-.0125,-.0125,i,i,-.0125,-.0125,-.0125,-.0125,i,-.0125,-.0125,-.0125,i,-.0125,i,i,-.0125,i,i,i,-.0125,i,-.0125,i,i,i,-.0125,i,i,-.0125,-.0125,-.0125,i,-.0125,i,i,-.0125,-.0125,-.0125,-.0125,-.0125,-.0125,-.0125,i,i,-.0125,i,-.0125,i,-.0125,-.0125,i,i,-.0125,-.0125,-.0125,-.0125,i,i,-.0125,-.0125,i,-.0125,-.0125,-.0125,i,i,i,i,i,-.0125,i,-.0125,-.0125,i,i,i,i,-.0125,-.0125,i,-.0125,i];if(null!=e)for(var n=0;n<r.length;n+=3)r[n]+=e.x,r[n+1]+=e.y,r[n+2]+=e.z;return a.addFaces(r,[0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,0]),await t.model.createMesh(a)}(t,new Communicator.Point3(0,0,.15));let e=[];e.push(new Communicator.Point3(0,0,0)),e.push(new Communicator.Point3(0,0,.15));let o=r(e,.0045,10);this._group.getManager()._cubeMesh2=await this._group.getViewer().model.createMesh(o)}async show(){let t=this._group.getViewer(),e=new Communicator.Matrix;this._axis&&Communicator.Util.computeOffaxisRotation(this._axis,this._rotation,e),this._nodeid=t.model.createNode(this._group._topNode,"scaleHandle"),this._group.getManager()._cubeMesh||await this.generateBaseGeometry();let o=new Communicator.MeshInstanceData(this._group.getManager()._cubeMesh);await t.model.createMeshInstance(o,this._nodeid),o=new Communicator.MeshInstanceData(this._group.getManager()._cubeMesh2),await t.model.createMeshInstance(o,this._nodeid),this._axis&&await t.model.setNodeMatrix(this._nodeid,e),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show()}async handleMouseMove(t){let e=this._group.getViewer(),o=new Communicator.Point3(0,0,0),i=new Communicator.Point3(0,0,1);l(this._startmatrix,o,i);let a,r=_(o,i,this._startPosition),n=w(e,o,i,t.getPosition()),m=Communicator.Point3.subtract(r,o).length(),u=Communicator.Plane.createFromPointAndNormal(r,i),d=Communicator.Point3.subtract(n,r);if(u.determineSide(n))a=d.length()/m/2;else if(a=-d.length()/m/2,a<=-.9)return;for(let t=0;t<this._startTargetMatrices.length;t++){let o,i;if(this._group._relative){o=s(e.model.getNodeMatrix(this._nodeid),new Communicator.Point3(0,0,1));let r=new Communicator.Matrix;r.setScaleComponent(1+o.x*a,1+o.y*a,1+o.z*a);let n=h(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(this._group._targetNodes[t])).transform(this._group._targetCenter)),l=Communicator.Matrix.multiply(Communicator.Matrix.inverse(n),r),m=Communicator.Matrix.multiply(l,n);i=Communicator.Matrix.multiply(m,this._startTargetMatrices[t])}else{o=s(e.model.getNodeNetMatrix(this._nodeid),new Communicator.Point3(0,0,1));let a=h(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(this._group._targetNodes[t])).transform(this._group._targetCenter)),r=Communicator.Matrix.multiply(Communicator.Matrix.inverse(a),smat),n=Communicator.Matrix.multiply(r,a);i=Communicator.Matrix.multiply(this._startTargetMatrices[t],n)}await e.model.setNodeMatrix(this._group._targetNodes[t],i)}await super.handleMouseMove(t)}}class F extends C{constructor(t,e){super(t),this._type=7,this._color=e}async show(){let t=this._group.getViewer();this._nodeid=t.model.createNode(this._group._topNode,"scaleAllHandle"),this._group.getManager()._sphereMesh||(this._group.getManager()._sphereMesh=await d(t));let e=new Communicator.MeshInstanceData(this._group.getManager()._sphereMesh);await t.model.createMeshInstance(e,this._nodeid);let o=new Communicator.Matrix;o.setScaleComponent(.02,.02,.02),await t.model.setNodeMatrix(this._nodeid,o),t.model.setNodesFaceColor([this._nodeid],this._color),await super.show()}async handleMouseMove(t){let e=this._group.getViewer(),o=e.getViewElement().getBoundingClientRect().width,i=t.getPosition().x-this._startPosition2D.x;if(i/=o/3,!(1+i<.2)){for(let t=0;t<this._startTargetMatrices.length;t++){let o=new Communicator.Matrix;o.setScaleComponent(1+i,1+i,1+i);let a=h(Communicator.Matrix.inverse(e.model.getNodeNetMatrix(this._group._targetNodes[t])).transform(this._group._targetCenter)),r=Communicator.Matrix.multiply(Communicator.Matrix.inverse(a),o),n=Communicator.Matrix.multiply(r,a),s=Communicator.Matrix.multiply(n,this._startTargetMatrices[t]);await e.model.setNodeMatrix(this._group._targetNodes[t],s)}await super.handleMouseMove(t)}}}class b extends M{constructor(t){super(t)}async show(t,e=null,o=null){await super.show(t,e,o);const i=this._axisHandles;i&&!i.includes(Communicator.Axis.X)||this._handles.push(new H(this,new Communicator.Point3(0,1,0),90,new Communicator.Color(0,200,0))),i&&!i.includes(Communicator.Axis.Y)||this._handles.push(new H(this,new Communicator.Point3(1,0,0),-90,new Communicator.Color(255,0,0))),i&&!i.includes(Communicator.Axis.Z)||this._handles.push(new H(this,null,0,new Communicator.Color(0,0,255))),this._handles.push(new F(this,new Communicator.Color(255,0,255)));for(let t=0;t<this._handles.length;t++)await this._handles[t].show()}}shandles=e})();